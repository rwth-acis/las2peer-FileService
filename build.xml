<project name="las2peer-File-Service" default="jar" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

	<property name="core.version" value="0.7-SNAPSHOT" />

	<property name="service.name" value="i5.las2peer.services.fileService" />
	<property name="service.class" value="FileService" />
	<property name="service.version" value="2.2.0" />

	<property name="src.main" location="src/main" />
	<property name="src.junit" location="src/test" />

	<property name="export" location="export" />
	<property name="export.javadoc" location="${export}/javadoc" />
	<property name="export.test_reports" location="${export}/test_reports" />

	<property name="tmp" location="tmp" />
	<property name="tmp.classes" location="${tmp}/classes" />
	<property name="tmp.bundle" location="${tmp}/bundle" />
	<property name="tmp.junit" location="${tmp}/test" />

	<property name="lib" location="lib" />
	<property name="service" location="service" />

	<path id="libraries">
		<fileset dir="${lib}">
			<include name="**/*.jar" />
			<exclude name="junit-*.jar" />
		</fileset>
		<fileset dir="${service}">
			<include name="**/*.jar" />
			<exclude name="i5.las2peer.services.*.jar" />
		</fileset>
	</path>

	<property name="lib.junit" location="${lib}/junit-4.12.jar" />


	<!-- Ivy Installation (Tool to fetch Libraries) -->
	<property name="ivy.install.version" value="2.4.0" />
	<property name="ivy.jar.dir" value="${basedir}/etc/ivy" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
	<property name="ivy.settings.file" value="${ivy.jar.dir}/ivysettings.xml" />
	<property name="ivy.dep.file" value="${ivy.jar.dir}/ivy.xml" />
	<target name="download-ivy">
		<mkdir dir="${ivy.jar.dir}" />
		<echo message="installing ivy..." />
		<get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true" skipexisting="true" />
	</target>

	<!-- Try to load Ivy here from local Ivy directory -->
	<target name="install-ivy" depends="download-ivy">
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar" />
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
	</target>


	<!-- Get Dependencies from our Maven Repository via Ivy -->
	<target name="get_deps" depends="install-ivy" description="--> resolve dependencies">
		<mkdir dir="${lib}" />
		<mkdir dir="${service}" />
		<ivy:settings>
			<credentials host="role.dbis.rwth-aachen.de:9911/archiva" realm="Repository internal" />
		</ivy:settings>
		<ivy:retrieve type="jar, bundle" conf="*" pattern="${lib}/[artifact]-[revision].[ext]" />
		<ivy:retrieve type="jar, bundle" conf="bundle" pattern="${tmp.bundle}/[artifact]-[revision].[ext]" />
	</target>


	<!-- Initialization (Folder Creation)-->
	<target name="init_compile" depends="get_deps">
		<mkdir dir="${tmp}" />
		<mkdir dir="${tmp.classes}" />
		<mkdir dir="${tmp.junit}" />
	</target>


	<!-- Compilation -->
	<target name="compile_main" depends="init_compile">
		<javac srcdir="${src.main}" destdir="${tmp.classes}" classpathref="libraries" debug="on" encoding="UTF-8" includeantruntime="false" />
		<copy todir="${tmp.classes}">
			<fileset dir="${src.main}">
				<include name="**/*.xml" />
			</fileset>
		</copy>
	</target>

	<target name="compile_junit" depends="compile_main">
		<javac srcdir="${src.junit}" destdir="${tmp.junit}" classpath="${tmp.classes}:${lib.junit}" classpathref="libraries" debug="on" encoding="UTF-8" includeantruntime="false" />
		<copy todir="${tmp.junit}">
			<fileset dir="${src.junit}">
				<include name="**/*.xml" />
			</fileset>
		</copy>
	</target>


	<!-- Generate Jars -->
	<target name="jar" depends="compile_main" description="--> build service jar including all deps">
		<jar jarfile="${service}/${service.name}-${service.version}.jar">
			<fileset dir="${tmp.classes}" />
			<zipgroupfileset dir="${tmp.bundle}" />
			<manifest>
				<attribute name="las2peer-service-name" value="${service.name}" />
				<attribute name="las2peer-service-version" value="${service.version}" />
			</manifest>
		</jar>
	</target>


	<!-- Generate Documentation -->
	<target name="javadoc" depends="compile_main" description="--> generate Javadoc">
		<javadoc destdir="${export.javadoc}" author="true" version="true" use="true" windowtitle="${ant.project.name} Documentation" failonerror="yes" encoding="utf8" classpath="${tmp.classes}" classpathref="libraries">
			<packageset dir="${src.main}" defaultexcludes="yes">
				<include name="i5/las2peer/**" />
			</packageset>
		</javadoc>
	</target>


	<!-- JUnit Testing -->
	<target name="junit" depends="compile_junit" description="--> execute all junit tests">
		<mkdir dir="${export.test_reports}" />
		<junit fork="yes" haltonerror="yes" haltonfailure="yes" printsummary="yes">
			<classpath>
				<pathelement path="${tmp.classes}" />
				<pathelement path="${tmp.junit}" />
				<pathelement path="${lib.junit}" />
				<path refid="libraries" />
			</classpath>
			<formatter type="plain" usefile="false" />
			<formatter type="plain" />
			<batchtest fork="yes" todir="${export.test_reports}">
				<fileset dir="${tmp.junit}">
					<include name="**/*Test.class" />
				</fileset>
			</batchtest>
		</junit>
		<delete dir="${tmp.junit}" />
	</target>


	<!-- General Cleanup -->
	<target name="clean" description="--> clean">
		<delete dir="${lib}" />
		<delete dir="${tmp}" />
	</target>

	<target name="distclean" depends="clean" description="--> clean everything">
		<delete dir="${export}" />
		<delete dir="${service}" />
	</target>


	<!-- All target usually used by CI systems -->
	<target name="all" depends="clean, jar, junit, javadoc" description="build all targets" />


	<!-- execute each target after a distclean -->
	<target name="selftest_clean" depends="distclean, clean, clean" />
	<target name="selftest_get_deps" depends="distclean, get_deps, get_deps" />
	<target name="selftest_jar" depends="distclean, jar, jar" />
	<target name="selftest_javadoc" depends="distclean, javadoc, javadoc" />
	<target name="selftest_junit" depends="distclean, junit, junit" />
	<target name="selftest_all" depends="distclean, all, all" />
	<!-- build script selftest -->
	<target name="selftest" depends="selftest_clean, selftest_get_deps, selftest_jar, selftest_javadoc, selftest_junit, selftest_all, distclean" description="--> build script selftest" />

</project>
